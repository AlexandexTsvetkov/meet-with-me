CREATE TABLE IF NOT EXISTS app_user (
     id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
         email VARCHAR(255) NOT NULL UNIQUE,
         name VARCHAR(255) NOT NULL,
         password VARCHAR(255) NOT NULL,
         status VARCHAR(50),
         blocked BOOLEAN DEFAULT FALSE,
         role VARCHAR(20) DEFAULT 'USER'
    );

CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(200) NOT NULL,
    CONSTRAINT pk_categories PRIMARY KEY (id),
    CONSTRAINT uq_categories_name UNIQUE (name)
    );

CREATE TABLE IF NOT EXISTS location (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat DOUBLE PRECISION NOT NULL,
    lon DOUBLE PRECISION NOT NULL,
    CONSTRAINT pk_location PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS meeting (
    id SERIAL PRIMARY KEY,
    annotation VARCHAR(255),
    category_id BIGINT REFERENCES categories(id),
    create_on TIMESTAMP,
    description VARCHAR(255),
    meeting_date TIMESTAMP,
    initiator_id BIGINT REFERENCES app_user(id),
    location_id BIGINT REFERENCES location(id),
    paid BOOLEAN,
    participant_limit INTEGER,
    published_on TIMESTAMP,
    title VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS invitations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    create_date TIMESTAMP NOT NULL,
    meeting_id BIGINT NOT NULL,
    invited_id BIGINT NOT NULL,
    status VARCHAR(50) NOT NULL,

    CONSTRAINT pk_requests PRIMARY KEY (id),
    CONSTRAINT fk_requests_meeting_id FOREIGN KEY (meeting_id) REFERENCES meeting (id) ON DELETE CASCADE,
    CONSTRAINT fk_requests_invited_id FOREIGN KEY (invited_id) REFERENCES app_user (id) ON DELETE CASCADE
    );